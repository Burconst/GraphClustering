# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.12

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/local/bin/cmake

# The command to remove a file.
RM = /usr/local/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /run/media/konstantin/NameD/Home/git/GraphClusteringLib

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /run/media/konstantin/NameD/Home/git/GraphClusteringLib

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/local/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/local/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(CMAKE_COMMAND) -E cmake_progress_start /run/media/konstantin/NameD/Home/git/GraphClusteringLib/CMakeFiles /run/media/konstantin/NameD/Home/git/GraphClusteringLib/test/Partition/CMakeFiles/progress.marks
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f CMakeFiles/Makefile2 test/Partition/all
	$(CMAKE_COMMAND) -E cmake_progress_start /run/media/konstantin/NameD/Home/git/GraphClusteringLib/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f CMakeFiles/Makefile2 test/Partition/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f CMakeFiles/Makefile2 test/Partition/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f CMakeFiles/Makefile2 test/Partition/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
test/Partition/CMakeFiles/PartitionTest1.dir/rule:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f CMakeFiles/Makefile2 test/Partition/CMakeFiles/PartitionTest1.dir/rule
.PHONY : test/Partition/CMakeFiles/PartitionTest1.dir/rule

# Convenience name for target.
PartitionTest1: test/Partition/CMakeFiles/PartitionTest1.dir/rule

.PHONY : PartitionTest1

# fast build rule for target.
PartitionTest1/fast:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest1.dir/build.make test/Partition/CMakeFiles/PartitionTest1.dir/build
.PHONY : PartitionTest1/fast

# Convenience name for target.
test/Partition/CMakeFiles/PartitionTest4.dir/rule:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f CMakeFiles/Makefile2 test/Partition/CMakeFiles/PartitionTest4.dir/rule
.PHONY : test/Partition/CMakeFiles/PartitionTest4.dir/rule

# Convenience name for target.
PartitionTest4: test/Partition/CMakeFiles/PartitionTest4.dir/rule

.PHONY : PartitionTest4

# fast build rule for target.
PartitionTest4/fast:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest4.dir/build.make test/Partition/CMakeFiles/PartitionTest4.dir/build
.PHONY : PartitionTest4/fast

# Convenience name for target.
test/Partition/CMakeFiles/PartitionTest2.dir/rule:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f CMakeFiles/Makefile2 test/Partition/CMakeFiles/PartitionTest2.dir/rule
.PHONY : test/Partition/CMakeFiles/PartitionTest2.dir/rule

# Convenience name for target.
PartitionTest2: test/Partition/CMakeFiles/PartitionTest2.dir/rule

.PHONY : PartitionTest2

# fast build rule for target.
PartitionTest2/fast:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest2.dir/build.make test/Partition/CMakeFiles/PartitionTest2.dir/build
.PHONY : PartitionTest2/fast

# Convenience name for target.
test/Partition/CMakeFiles/PartitionTest3.dir/rule:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f CMakeFiles/Makefile2 test/Partition/CMakeFiles/PartitionTest3.dir/rule
.PHONY : test/Partition/CMakeFiles/PartitionTest3.dir/rule

# Convenience name for target.
PartitionTest3: test/Partition/CMakeFiles/PartitionTest3.dir/rule

.PHONY : PartitionTest3

# fast build rule for target.
PartitionTest3/fast:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest3.dir/build.make test/Partition/CMakeFiles/PartitionTest3.dir/build
.PHONY : PartitionTest3/fast

PartitionTest1.o: PartitionTest1.cpp.o

.PHONY : PartitionTest1.o

# target to build an object file
PartitionTest1.cpp.o:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest1.dir/build.make test/Partition/CMakeFiles/PartitionTest1.dir/PartitionTest1.cpp.o
.PHONY : PartitionTest1.cpp.o

PartitionTest1.i: PartitionTest1.cpp.i

.PHONY : PartitionTest1.i

# target to preprocess a source file
PartitionTest1.cpp.i:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest1.dir/build.make test/Partition/CMakeFiles/PartitionTest1.dir/PartitionTest1.cpp.i
.PHONY : PartitionTest1.cpp.i

PartitionTest1.s: PartitionTest1.cpp.s

.PHONY : PartitionTest1.s

# target to generate assembly for a file
PartitionTest1.cpp.s:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest1.dir/build.make test/Partition/CMakeFiles/PartitionTest1.dir/PartitionTest1.cpp.s
.PHONY : PartitionTest1.cpp.s

PartitionTest2.o: PartitionTest2.cpp.o

.PHONY : PartitionTest2.o

# target to build an object file
PartitionTest2.cpp.o:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest2.dir/build.make test/Partition/CMakeFiles/PartitionTest2.dir/PartitionTest2.cpp.o
.PHONY : PartitionTest2.cpp.o

PartitionTest2.i: PartitionTest2.cpp.i

.PHONY : PartitionTest2.i

# target to preprocess a source file
PartitionTest2.cpp.i:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest2.dir/build.make test/Partition/CMakeFiles/PartitionTest2.dir/PartitionTest2.cpp.i
.PHONY : PartitionTest2.cpp.i

PartitionTest2.s: PartitionTest2.cpp.s

.PHONY : PartitionTest2.s

# target to generate assembly for a file
PartitionTest2.cpp.s:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest2.dir/build.make test/Partition/CMakeFiles/PartitionTest2.dir/PartitionTest2.cpp.s
.PHONY : PartitionTest2.cpp.s

PartitionTest3.o: PartitionTest3.cpp.o

.PHONY : PartitionTest3.o

# target to build an object file
PartitionTest3.cpp.o:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest3.dir/build.make test/Partition/CMakeFiles/PartitionTest3.dir/PartitionTest3.cpp.o
.PHONY : PartitionTest3.cpp.o

PartitionTest3.i: PartitionTest3.cpp.i

.PHONY : PartitionTest3.i

# target to preprocess a source file
PartitionTest3.cpp.i:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest3.dir/build.make test/Partition/CMakeFiles/PartitionTest3.dir/PartitionTest3.cpp.i
.PHONY : PartitionTest3.cpp.i

PartitionTest3.s: PartitionTest3.cpp.s

.PHONY : PartitionTest3.s

# target to generate assembly for a file
PartitionTest3.cpp.s:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest3.dir/build.make test/Partition/CMakeFiles/PartitionTest3.dir/PartitionTest3.cpp.s
.PHONY : PartitionTest3.cpp.s

PartitionTest4.o: PartitionTest4.cpp.o

.PHONY : PartitionTest4.o

# target to build an object file
PartitionTest4.cpp.o:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest4.dir/build.make test/Partition/CMakeFiles/PartitionTest4.dir/PartitionTest4.cpp.o
.PHONY : PartitionTest4.cpp.o

PartitionTest4.i: PartitionTest4.cpp.i

.PHONY : PartitionTest4.i

# target to preprocess a source file
PartitionTest4.cpp.i:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest4.dir/build.make test/Partition/CMakeFiles/PartitionTest4.dir/PartitionTest4.cpp.i
.PHONY : PartitionTest4.cpp.i

PartitionTest4.s: PartitionTest4.cpp.s

.PHONY : PartitionTest4.s

# target to generate assembly for a file
PartitionTest4.cpp.s:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(MAKE) -f test/Partition/CMakeFiles/PartitionTest4.dir/build.make test/Partition/CMakeFiles/PartitionTest4.dir/PartitionTest4.cpp.s
.PHONY : PartitionTest4.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... rebuild_cache"
	@echo "... edit_cache"
	@echo "... PartitionTest1"
	@echo "... PartitionTest4"
	@echo "... PartitionTest2"
	@echo "... PartitionTest3"
	@echo "... PartitionTest1.o"
	@echo "... PartitionTest1.i"
	@echo "... PartitionTest1.s"
	@echo "... PartitionTest2.o"
	@echo "... PartitionTest2.i"
	@echo "... PartitionTest2.s"
	@echo "... PartitionTest3.o"
	@echo "... PartitionTest3.i"
	@echo "... PartitionTest3.s"
	@echo "... PartitionTest4.o"
	@echo "... PartitionTest4.i"
	@echo "... PartitionTest4.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /run/media/konstantin/NameD/Home/git/GraphClusteringLib && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

